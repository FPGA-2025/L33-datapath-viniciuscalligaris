$date
	Sun Jul 20 19:47:02 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var reg 1 ! clk $end
$var reg 8 " counter [7:0] $end
$var reg 32 # expected_result [31:0] $end
$var reg 1 $ rst_n $end
$scope module t $end
$var wire 1 ! clk $end
$var wire 1 $ rst_n $end
$var wire 1 % wr_en $end
$var wire 1 & rd_en $end
$var wire 32 ' data_out [31:0] $end
$var wire 32 ( data_in [31:0] $end
$var wire 32 ) addr [31:0] $end
$var parameter 96 * MEMORY_FILE $end
$var parameter 32 + MEMORY_SIZE $end
$scope module core $end
$var wire 1 ! clk $end
$var wire 1 $ rst_n $end
$var wire 32 , data_i [31:0] $end
$var parameter 32 - BOOT_ADDRESS $end
$var parameter 32 . DECODE $end
$var parameter 32 / DONE $end
$var parameter 32 0 EXEC $end
$var parameter 32 1 FETCH $end
$var parameter 32 2 LOAD_WAIT $end
$var parameter 32 3 WAIT_SW $end
$var parameter 32 4 WRITE_SW $end
$var reg 32 5 addr_o [31:0] $end
$var reg 32 6 data_o [31:0] $end
$var reg 32 7 instr [31:0] $end
$var reg 32 8 pc [31:0] $end
$var reg 1 & rd_en_o $end
$var reg 4 9 state [3:0] $end
$var reg 32 : sw_data [31:0] $end
$var reg 32 ; sw_target [31:0] $end
$var reg 1 % wr_en_i $end
$upscope $end
$scope module mem $end
$var wire 1 < ack_o $end
$var wire 32 = addr_i [31:0] $end
$var wire 1 ! clk $end
$var wire 32 > data_i [31:0] $end
$var wire 1 & rd_en_i $end
$var wire 1 % wr_en_i $end
$var wire 32 ? data_o [31:0] $end
$var parameter 32 @ DEPTH $end
$var parameter 96 A MEMORY_FILE $end
$var parameter 32 B MEMORY_SIZE $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000000000000 B
b11100000111001001101111011001110111001001100001011011010110000100101110011101000111100001110100 A
b10000000000 @
b11 4
b100 3
b101 2
b0 1
b10 0
b110 /
b1 .
b0 -
b1000000000000 +
b11100000111001001101111011001110111001001100001011011010110000100101110011101000111100001110100 *
$end
#0
$dumpvars
b0 ?
b0 >
b0 =
1<
bx ;
bx :
b0 9
b0 8
bx 7
b0 6
b0 5
b0 ,
b0 )
b0 (
b0 '
0&
0%
0$
b0 #
b0 "
0!
$end
#1000
1!
#2000
0!
#3000
1!
#4000
0!
#5000
b100000000000001011100111 (
b100000000000001011100111 ,
b100000000000001011100111 ?
b1 9
1&
b1 "
1!
1$
#6000
0!
#7000
b0 (
b0 ,
b0 ?
b10 9
b100 8
b100000000000001011100111 7
0&
b10 "
1!
#8000
0!
#9000
b0 9
b1000 8
b11 "
1!
#10000
0!
#11000
b10100000100011 (
b10100000100011 ,
b10100000100011 ?
b1 9
1&
b1000 )
b1000 5
b1000 =
b100 "
1!
#12000
0!
#13000
b0 (
b0 ,
b0 ?
b10 9
b1100 8
b10100000100011 7
0&
b101 "
1!
#14000
0!
#15000
b11 9
b0 :
b10000 ;
b110 "
1!
#16000
0!
#17000
b100 9
1%
b10000 )
b10000 5
b10000 =
b111 "
1!
#18000
0!
#19000
b0 9
0%
b1000 "
1!
#20000
0!
#21000
bx (
bx ,
bx ?
b1 9
1&
b1100 )
b1100 5
b1100 =
b1001 "
1!
#22000
0!
#23000
b0 (
b0 ,
b0 ?
b10 9
b10000 8
bx 7
0&
1!
#24000
0!
#25000
b0 9
1!
